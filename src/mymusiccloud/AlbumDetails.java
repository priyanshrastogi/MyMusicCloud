/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package mymusiccloud;

import java.io.File;
import java.util.ArrayList;
import java.util.List;
import javafx.scene.media.Media;
import javafx.scene.media.MediaPlayer;
import javafx.scene.media.MediaPlayer.Status;
import javax.swing.JOptionPane;
import javax.swing.table.TableColumnModel;

/**
 *
 * @author Priyansh Rastogi
 */
public class AlbumDetails extends javax.swing.JFrame {

    /**
     * Creates new form AlbumDetails
     */
    public static Album currentAlbum = new Album();
    
    MediaPlayer mPlayer;
    public AlbumDetails() {
        initComponents();
        albumName.setText(currentAlbum.getAlbumName());
        artistName.setText(currentAlbum.getArtist());
        List<Song> songs = null;
        try {
            DBDriver driver = new DBDriver();
            songs = driver.getAllSongs(currentAlbum.getAlbumID());
        }catch(Exception e) {
            e.printStackTrace();
        }
        SongModel model = new SongModel(songs);
        table.setModel(model);
        TableColumnModel tcm = table.getColumnModel();
        tcm.getColumn(2).setMaxWidth(100);
        table.addMouseListener(new java.awt.event.MouseAdapter() {
            @Override
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                int row = table.rowAtPoint(evt.getPoint());
                int column = table.columnAtPoint(evt.getPoint());
                if(column==2) {
                    if (JOptionPane.showConfirmDialog(null, "Are you sure about that? Once you delete it, there is no going back.", "Warning", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
                        try {
                            DBDriver driver = new DBDriver();
                            driver.deleteSong(Integer.parseInt(table.getModel().getValueAt(row, 4).toString()));
                            if(mPlayer!=null) {
                                mPlayer.stop();
                            }
                            List<Song> songlist = driver.getAllSongs(currentAlbum.getAlbumID());
                            SongModel model2 = new SongModel(songlist);
                            table.setModel(model2);
                            TableColumnModel tcm = table.getColumnModel();
                            tcm.getColumn(2).setMaxWidth(100);
                        }catch(Exception e) {
                            e.printStackTrace();
                        }
                    }
                }

                else {

                }
                if(column!=2) {
                    new javafx.embed.swing.JFXPanel();
                    String uriString = new File(table.getModel().getValueAt(row, 1).toString()).toURI().toString();
                    Media media = new Media(uriString);
                    if(mPlayer!=null)
                        mPlayer.stop();
                    mPlayer = new MediaPlayer(media);
                    mPlayer.play();
                }
            }
            
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        albumName = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        addSongs = new javax.swing.JButton();
        artistName = new javax.swing.JLabel();
        delete = new javax.swing.JButton();
        Back = new javax.swing.JButton();
        pause = new javax.swing.JButton();
        stop = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        albumName.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        albumName.setText("Album Name");

        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane1.setViewportView(table);

        addSongs.setText("Add Songs");
        addSongs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addSongsActionPerformed(evt);
            }
        });

        artistName.setText("Artist Name");

        delete.setText("Delete Album");
        delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteActionPerformed(evt);
            }
        });

        Back.setText("Back");
        Back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackActionPerformed(evt);
            }
        });

        pause.setText("Pause");
        pause.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pauseActionPerformed(evt);
            }
        });

        stop.setText("Stop");
        stop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                stopActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Back)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 237, Short.MAX_VALUE)
                .addComponent(albumName)
                .addGap(200, 200, 200)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(delete, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(addSongs, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(32, 32, 32))
            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(328, 328, 328)
                        .addComponent(artistName))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(304, 304, 304)
                        .addComponent(pause)
                        .addGap(41, 41, 41)
                        .addComponent(stop)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(albumName)
                            .addComponent(addSongs)))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(Back)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(artistName)
                .addGap(1, 1, 1)
                .addComponent(delete)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 44, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pause)
                    .addComponent(stop))
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void addSongsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addSongsActionPerformed
        AddSong.album = currentAlbum;
        AddSong as = new AddSong();
        if(mPlayer!=null)
                mPlayer.stop();
        this.dispose();
        as.setVisible(true);
    }//GEN-LAST:event_addSongsActionPerformed

    private void deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteActionPerformed
        if (JOptionPane.showConfirmDialog(null, "Are you sure about that? Once you delete it, there is no going back.", "Warning", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
            try {
                int albumID = currentAlbum.getAlbumID();
                DBDriver driver = new DBDriver();
                driver.deleteAlbum(albumID);
            }catch(Exception e) {
                e.printStackTrace();
            }
            Dashboard db = new Dashboard();
            if(mPlayer!=null)
                mPlayer.stop();
            this.dispose();
            db.setVisible(true);
        } 
        
        else {
            
        }
        
    }//GEN-LAST:event_deleteActionPerformed

    private void BackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackActionPerformed
        Dashboard db = new Dashboard();
        if(mPlayer!=null)
                mPlayer.stop();
        this.dispose();
        db.setVisible(true);
    }//GEN-LAST:event_BackActionPerformed

    private void pauseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pauseActionPerformed
        if(mPlayer.getStatus().equals(Status.PLAYING))
            mPlayer.pause();
        else
            mPlayer.play();
    }//GEN-LAST:event_pauseActionPerformed

    private void stopActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_stopActionPerformed
        mPlayer.stop();
    }//GEN-LAST:event_stopActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AlbumDetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AlbumDetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AlbumDetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AlbumDetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AlbumDetails().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Back;
    private javax.swing.JButton addSongs;
    private javax.swing.JLabel albumName;
    private javax.swing.JLabel artistName;
    private javax.swing.JButton delete;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton pause;
    private javax.swing.JButton stop;
    private javax.swing.JTable table;
    // End of variables declaration//GEN-END:variables
}
